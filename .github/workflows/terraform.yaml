on:  
  workflow_call:
    inputs:
      runner_group:
        required: true
        type: string
      terraform_version:
        type: string
        default: 1.1.9
        description: The version of the Terraform CLI.
        required: false
      working_directory:
        type: string
        description: The folder with the Terraform files.
        required: true
      github_event_name:
        type: string
        required: true
      tag:
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true
      GIT_PIPE_TOKEN:
        required: true
      INFRACOST_API_KEY:
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
      - name: Run terraform fmt check
        run: terraform fmt -check -diff -recursive
        working-directory: ${{ inputs.working_directory }}

  plan:
    name: Planning
    runs-on: ${{ inputs.runner_group }}
    strategy:
      fail-fast: false
    if: github.event_name == 'pull_request'
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
      - name: Initialize Terraform
        run: terraform init -input=false
        working-directory: ${{ inputs.working_directory }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_TARGET_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
      - name: Terraform Plan
        id: plan
        continue-on-error: true
        run: terraform plan
        working-directory: ${{ inputs.working_directory }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_TARGET_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}

  cost_projection:
    runs-on: ${{ inputs.runner_group }}
    name: Show cost projection
    needs: plan
    if: github.event_name == 'pull_request'
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Checkout base branch
        uses: actions/checkout@v2
        with:
          ref: '${{ github.event.pull_request.base.ref }}'
      - name: Generate Infracost cost estimate baseline
        working-directory: ${{ inputs.working_directory }}
        run: |
          infracost breakdown --path=./ \
                              --format=json \
                              --out-file=/tmp/infracost-base.json
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Run Infracost
        working-directory: ${{ inputs.working_directory }}
        run: |
          infracost diff --path=./ \
                        --format=json \
                        --compare-to=/tmp/infracost-base.json \
                        --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |
          infracost comment github --path="/tmp/infracost.json" \
                                   --repo=$GITHUB_REPOSITORY \
                                   --github-token=${{secrets.GIT_PIPE_TOKEN}} \
                                   --pull-request=${{github.event.pull_request.number}} \
                                   --behavior=update
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
      
      
  apply:
    name: Deployment
    runs-on: ${{ inputs.runner_group }}
    strategy:
      fail-fast: false
    if: ${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
      - name: Initialize Terraform
        run: terraform init -input=false 
        working-directory: ${{ inputs.working_directory }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_TARGET_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }} 
      - name: Validate
        run: terraform validate
        working-directory: ${{ inputs.working-directory }}
      
      - name: Apply
        run: | 
          echo `${GITHUB_WORKSPACE}`
          terraform plan
          terraform apply -auto-approve -input=false -lock-timeout=30m
        working-directory: ${{ inputs.working-directory }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_TARGET_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
